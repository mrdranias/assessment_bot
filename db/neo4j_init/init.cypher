// Generated by generate_neo4j_init.py on 2025-07-15 15:39
// DO NOT EDIT MANUALLY

// === Constraints & Indexes ===
CREATE CONSTRAINT domain_name_unique IF NOT EXISTS FOR (d:Domain) REQUIRE d.name IS UNIQUE;
CREATE CONSTRAINT question_code_unique IF NOT EXISTS FOR (q:Question) REQUIRE q.code IS UNIQUE;
CREATE CONSTRAINT answer_id_unique IF NOT EXISTS FOR (a:Answer) REQUIRE a.id IS UNIQUE;
CREATE INDEX question_sequence IF NOT EXISTS FOR (q:Question) ON (q.sequence);

// === Clear existing data ===
MATCH (n) DETACH DELETE n;

// === Create Domains ===
CREATE (:Domain {name: 'telephone', category: 'IADL', description: 'IADL - Telephone'});
CREATE (:Domain {name: 'shopping', category: 'IADL', description: 'IADL - Shopping'});
CREATE (:Domain {name: 'food_preparation', category: 'IADL', description: 'IADL - Food Preparation'});
CREATE (:Domain {name: 'housekeeping', category: 'IADL', description: 'IADL - Housekeeping'});
CREATE (:Domain {name: 'laundry', category: 'IADL', description: 'IADL - Laundry'});
CREATE (:Domain {name: 'transportation', category: 'IADL', description: 'IADL - Transportation'});
CREATE (:Domain {name: 'medication', category: 'IADL', description: 'IADL - Medication'});
CREATE (:Domain {name: 'finances', category: 'IADL', description: 'IADL - Finances'});
CREATE (:Domain {name: 'bowels', category: 'ADL', description: 'ADL - Bowels'});
CREATE (:Domain {name: 'bladder', category: 'ADL', description: 'ADL - Bladder'});
CREATE (:Domain {name: 'grooming', category: 'ADL', description: 'ADL - Grooming'});
CREATE (:Domain {name: 'toilet_use', category: 'ADL', description: 'ADL - Toilet Use'});
CREATE (:Domain {name: 'feeding', category: 'ADL', description: 'ADL - Feeding'});
CREATE (:Domain {name: 'transfers', category: 'ADL', description: 'ADL - Transfers'});
CREATE (:Domain {name: 'mobility', category: 'ADL', description: 'ADL - Mobility'});
CREATE (:Domain {name: 'dressing', category: 'ADL', description: 'ADL - Dressing'});
CREATE (:Domain {name: 'stairs', category: 'ADL', description: 'ADL - Stairs'});
CREATE (:Domain {name: 'bathing', category: 'ADL', description: 'ADL - Bathing'});

// === Create Questions ===
CREATE (:Question {id: 'LAWTON_TELEPHONE', code: 'LAWTON_TELEPHONE', domain: 'telephone', sequence: 1, text: 'Ability to Use Telephone', description: 'Assessment of telephone usage ability', assessment_type: 'IADL'});
CREATE (:Question {id: 'LAWTON_SHOPPING', code: 'LAWTON_SHOPPING', domain: 'shopping', sequence: 2, text: 'Shopping', description: 'Assessment of shopping ability for necessities', assessment_type: 'IADL'});
CREATE (:Question {id: 'LAWTON_FOOD_PREP', code: 'LAWTON_FOOD_PREP', domain: 'food_preparation', sequence: 3, text: 'Food Preparation', description: 'Assessment of meal planning and preparation ability', assessment_type: 'IADL'});
CREATE (:Question {id: 'LAWTON_HOUSEKEEPING', code: 'LAWTON_HOUSEKEEPING', domain: 'housekeeping', sequence: 4, text: 'Housekeeping', description: 'Assessment of home maintenance ability', assessment_type: 'IADL'});
CREATE (:Question {id: 'LAWTON_LAUNDRY', code: 'LAWTON_LAUNDRY', domain: 'laundry', sequence: 5, text: 'Laundry', description: 'Assessment of personal laundry ability', assessment_type: 'IADL'});
CREATE (:Question {id: 'LAWTON_TRANSPORTATION', code: 'LAWTON_TRANSPORTATION', domain: 'transportation', sequence: 6, text: 'Mode of Transportation', description: 'Assessment of transportation arrangement ability', assessment_type: 'IADL'});
CREATE (:Question {id: 'LAWTON_MEDICATION', code: 'LAWTON_MEDICATION', domain: 'medication', sequence: 7, text: 'Responsibility for Own Medications', description: 'Assessment of medication management ability', assessment_type: 'IADL'});
CREATE (:Question {id: 'LAWTON_FINANCES', code: 'LAWTON_FINANCES', domain: 'finances', sequence: 8, text: 'Ability to Handle Finances', description: 'Assessment of financial management ability', assessment_type: 'IADL'});
CREATE (:Question {id: 'BARTHEL_BOWELS', code: 'BARTHEL_BOWELS', domain: 'bowels', sequence: 1, text: 'Bowel control', description: 'Assessment of bowel continence over the past week', assessment_type: 'ADL'});
CREATE (:Question {id: 'BARTHEL_BLADDER', code: 'BARTHEL_BLADDER', domain: 'bladder', sequence: 2, text: 'Bladder control', description: 'Assessment of bladder continence over the past week', assessment_type: 'ADL'});
CREATE (:Question {id: 'BARTHEL_GROOMING', code: 'BARTHEL_GROOMING', domain: 'grooming', sequence: 3, text: 'Grooming', description: 'Personal hygiene including teeth, hair, shaving, washing face', assessment_type: 'ADL'});
CREATE (:Question {id: 'BARTHEL_TOILET_USE', code: 'BARTHEL_TOILET_USE', domain: 'toilet_use', sequence: 4, text: 'Toilet use', description: 'Ability to reach toilet, undress, clean self, dress, and leave', assessment_type: 'ADL'});
CREATE (:Question {id: 'BARTHEL_FEEDING', code: 'BARTHEL_FEEDING', domain: 'feeding', sequence: 5, text: 'Feeding', description: 'Ability to eat any normal food (food cooked and served by others)', assessment_type: 'ADL'});
CREATE (:Question {id: 'BARTHEL_TRANSFERS', code: 'BARTHEL_TRANSFERS', domain: 'transfers', sequence: 6, text: 'Transfer (bed to chair and back)', description: 'Ability to move from bed to chair and back', assessment_type: 'ADL'});
CREATE (:Question {id: 'BARTHEL_MOBILITY', code: 'BARTHEL_MOBILITY', domain: 'mobility', sequence: 7, text: 'Mobility', description: 'Mobility about house/ward, indoors (may use aid)', assessment_type: 'ADL'});
CREATE (:Question {id: 'BARTHEL_DRESSING', code: 'BARTHEL_DRESSING', domain: 'dressing', sequence: 8, text: 'Dressing', description: 'Ability to select and put on all clothes (may be adapted)', assessment_type: 'ADL'});
CREATE (:Question {id: 'BARTHEL_STAIRS', code: 'BARTHEL_STAIRS', domain: 'stairs', sequence: 9, text: 'Stairs', description: 'Ability to go up and down stairs (must carry any walking aid used)', assessment_type: 'ADL'});
CREATE (:Question {id: 'BARTHEL_BATHING', code: 'BARTHEL_BATHING', domain: 'bathing', sequence: 10, text: 'Bathing', description: 'Ability to get in and out unsupervised and wash self', assessment_type: 'ADL'});

// === Create Domain -> Question Relationships ===
MATCH (d:Domain {name: 'telephone', category: 'IADL'}), (q:Question {id: 'LAWTON_TELEPHONE'}) CREATE (d)-[:HAS_QUESTION]->(q);
MATCH (d:Domain {name: 'shopping', category: 'IADL'}), (q:Question {id: 'LAWTON_SHOPPING'}) CREATE (d)-[:HAS_QUESTION]->(q);
MATCH (d:Domain {name: 'food_preparation', category: 'IADL'}), (q:Question {id: 'LAWTON_FOOD_PREP'}) CREATE (d)-[:HAS_QUESTION]->(q);
MATCH (d:Domain {name: 'housekeeping', category: 'IADL'}), (q:Question {id: 'LAWTON_HOUSEKEEPING'}) CREATE (d)-[:HAS_QUESTION]->(q);
MATCH (d:Domain {name: 'laundry', category: 'IADL'}), (q:Question {id: 'LAWTON_LAUNDRY'}) CREATE (d)-[:HAS_QUESTION]->(q);
MATCH (d:Domain {name: 'transportation', category: 'IADL'}), (q:Question {id: 'LAWTON_TRANSPORTATION'}) CREATE (d)-[:HAS_QUESTION]->(q);
MATCH (d:Domain {name: 'medication', category: 'IADL'}), (q:Question {id: 'LAWTON_MEDICATION'}) CREATE (d)-[:HAS_QUESTION]->(q);
MATCH (d:Domain {name: 'finances', category: 'IADL'}), (q:Question {id: 'LAWTON_FINANCES'}) CREATE (d)-[:HAS_QUESTION]->(q);
MATCH (d:Domain {name: 'bowels', category: 'ADL'}), (q:Question {id: 'BARTHEL_BOWELS'}) CREATE (d)-[:HAS_QUESTION]->(q);
MATCH (d:Domain {name: 'bladder', category: 'ADL'}), (q:Question {id: 'BARTHEL_BLADDER'}) CREATE (d)-[:HAS_QUESTION]->(q);
MATCH (d:Domain {name: 'grooming', category: 'ADL'}), (q:Question {id: 'BARTHEL_GROOMING'}) CREATE (d)-[:HAS_QUESTION]->(q);
MATCH (d:Domain {name: 'toilet_use', category: 'ADL'}), (q:Question {id: 'BARTHEL_TOILET_USE'}) CREATE (d)-[:HAS_QUESTION]->(q);
MATCH (d:Domain {name: 'feeding', category: 'ADL'}), (q:Question {id: 'BARTHEL_FEEDING'}) CREATE (d)-[:HAS_QUESTION]->(q);
MATCH (d:Domain {name: 'transfers', category: 'ADL'}), (q:Question {id: 'BARTHEL_TRANSFERS'}) CREATE (d)-[:HAS_QUESTION]->(q);
MATCH (d:Domain {name: 'mobility', category: 'ADL'}), (q:Question {id: 'BARTHEL_MOBILITY'}) CREATE (d)-[:HAS_QUESTION]->(q);
MATCH (d:Domain {name: 'dressing', category: 'ADL'}), (q:Question {id: 'BARTHEL_DRESSING'}) CREATE (d)-[:HAS_QUESTION]->(q);
MATCH (d:Domain {name: 'stairs', category: 'ADL'}), (q:Question {id: 'BARTHEL_STAIRS'}) CREATE (d)-[:HAS_QUESTION]->(q);
MATCH (d:Domain {name: 'bathing', category: 'ADL'}), (q:Question {id: 'BARTHEL_BATHING'}) CREATE (d)-[:HAS_QUESTION]->(q);

// === Create Answer nodes and HAS_OPTION Relationships ===
CREATE (a_LAWTON_TELEPHONE_OPT_1:Answer {id: 'LAWTON_TELEPHONE_OPT_1', text: 'Does not use telephone at all', clinical_score: 0, answer_order: 1});
MATCH (q:Question {id: 'LAWTON_TELEPHONE'}), (a_LAWTON_TELEPHONE_OPT_1:Answer {id: 'LAWTON_TELEPHONE_OPT_1'}) CREATE (q)-[:HAS_OPTION]->(a_LAWTON_TELEPHONE_OPT_1);
CREATE (a_LAWTON_TELEPHONE_OPT_2:Answer {id: 'LAWTON_TELEPHONE_OPT_2', text: 'Operates telephone on own initiative; looks up and dials numbers', clinical_score: 1, answer_order: 2});
MATCH (q:Question {id: 'LAWTON_TELEPHONE'}), (a_LAWTON_TELEPHONE_OPT_2:Answer {id: 'LAWTON_TELEPHONE_OPT_2'}) CREATE (q)-[:HAS_OPTION]->(a_LAWTON_TELEPHONE_OPT_2);
CREATE (a_LAWTON_SHOPPING_OPT_1:Answer {id: 'LAWTON_SHOPPING_OPT_1', text: 'Needs help with all shopping', clinical_score: 0, answer_order: 1});
MATCH (q:Question {id: 'LAWTON_SHOPPING'}), (a_LAWTON_SHOPPING_OPT_1:Answer {id: 'LAWTON_SHOPPING_OPT_1'}) CREATE (q)-[:HAS_OPTION]->(a_LAWTON_SHOPPING_OPT_1);
CREATE (a_LAWTON_SHOPPING_OPT_2:Answer {id: 'LAWTON_SHOPPING_OPT_2', text: 'Takes care of all shopping needs independently', clinical_score: 1, answer_order: 2});
MATCH (q:Question {id: 'LAWTON_SHOPPING'}), (a_LAWTON_SHOPPING_OPT_2:Answer {id: 'LAWTON_SHOPPING_OPT_2'}) CREATE (q)-[:HAS_OPTION]->(a_LAWTON_SHOPPING_OPT_2);
CREATE (a_LAWTON_FOOD_PREP_OPT_1:Answer {id: 'LAWTON_FOOD_PREP_OPT_1', text: 'Needs help with meal preparation', clinical_score: 0, answer_order: 1});
MATCH (q:Question {id: 'LAWTON_FOOD_PREP'}), (a_LAWTON_FOOD_PREP_OPT_1:Answer {id: 'LAWTON_FOOD_PREP_OPT_1'}) CREATE (q)-[:HAS_OPTION]->(a_LAWTON_FOOD_PREP_OPT_1);
CREATE (a_LAWTON_FOOD_PREP_OPT_2:Answer {id: 'LAWTON_FOOD_PREP_OPT_2', text: 'Plans, prepares, and serves meals independently', clinical_score: 1, answer_order: 2});
MATCH (q:Question {id: 'LAWTON_FOOD_PREP'}), (a_LAWTON_FOOD_PREP_OPT_2:Answer {id: 'LAWTON_FOOD_PREP_OPT_2'}) CREATE (q)-[:HAS_OPTION]->(a_LAWTON_FOOD_PREP_OPT_2);
CREATE (a_LAWTON_HOUSEKEEPING_OPT_1:Answer {id: 'LAWTON_HOUSEKEEPING_OPT_1', text: 'Needs help with all home maintenance', clinical_score: 0, answer_order: 1});
MATCH (q:Question {id: 'LAWTON_HOUSEKEEPING'}), (a_LAWTON_HOUSEKEEPING_OPT_1:Answer {id: 'LAWTON_HOUSEKEEPING_OPT_1'}) CREATE (q)-[:HAS_OPTION]->(a_LAWTON_HOUSEKEEPING_OPT_1);
CREATE (a_LAWTON_HOUSEKEEPING_OPT_2:Answer {id: 'LAWTON_HOUSEKEEPING_OPT_2', text: 'Maintains house alone with occasional help', clinical_score: 1, answer_order: 2});
MATCH (q:Question {id: 'LAWTON_HOUSEKEEPING'}), (a_LAWTON_HOUSEKEEPING_OPT_2:Answer {id: 'LAWTON_HOUSEKEEPING_OPT_2'}) CREATE (q)-[:HAS_OPTION]->(a_LAWTON_HOUSEKEEPING_OPT_2);
CREATE (a_LAWTON_LAUNDRY_OPT_1:Answer {id: 'LAWTON_LAUNDRY_OPT_1', text: 'Needs help with all laundry', clinical_score: 0, answer_order: 1});
MATCH (q:Question {id: 'LAWTON_LAUNDRY'}), (a_LAWTON_LAUNDRY_OPT_1:Answer {id: 'LAWTON_LAUNDRY_OPT_1'}) CREATE (q)-[:HAS_OPTION]->(a_LAWTON_LAUNDRY_OPT_1);
CREATE (a_LAWTON_LAUNDRY_OPT_2:Answer {id: 'LAWTON_LAUNDRY_OPT_2', text: 'Does personal laundry completely', clinical_score: 1, answer_order: 2});
MATCH (q:Question {id: 'LAWTON_LAUNDRY'}), (a_LAWTON_LAUNDRY_OPT_2:Answer {id: 'LAWTON_LAUNDRY_OPT_2'}) CREATE (q)-[:HAS_OPTION]->(a_LAWTON_LAUNDRY_OPT_2);
CREATE (a_LAWTON_TRANSPORTATION_OPT_1:Answer {id: 'LAWTON_TRANSPORTATION_OPT_1', text: 'Needs help or is unable to travel', clinical_score: 0, answer_order: 1});
MATCH (q:Question {id: 'LAWTON_TRANSPORTATION'}), (a_LAWTON_TRANSPORTATION_OPT_1:Answer {id: 'LAWTON_TRANSPORTATION_OPT_1'}) CREATE (q)-[:HAS_OPTION]->(a_LAWTON_TRANSPORTATION_OPT_1);
CREATE (a_LAWTON_TRANSPORTATION_OPT_2:Answer {id: 'LAWTON_TRANSPORTATION_OPT_2', text: 'Travels independently', clinical_score: 1, answer_order: 2});
MATCH (q:Question {id: 'LAWTON_TRANSPORTATION'}), (a_LAWTON_TRANSPORTATION_OPT_2:Answer {id: 'LAWTON_TRANSPORTATION_OPT_2'}) CREATE (q)-[:HAS_OPTION]->(a_LAWTON_TRANSPORTATION_OPT_2);
CREATE (a_LAWTON_MEDICATION_OPT_1:Answer {id: 'LAWTON_MEDICATION_OPT_1', text: 'Needs help with medications', clinical_score: 0, answer_order: 1});
MATCH (q:Question {id: 'LAWTON_MEDICATION'}), (a_LAWTON_MEDICATION_OPT_1:Answer {id: 'LAWTON_MEDICATION_OPT_1'}) CREATE (q)-[:HAS_OPTION]->(a_LAWTON_MEDICATION_OPT_1);
CREATE (a_LAWTON_MEDICATION_OPT_2:Answer {id: 'LAWTON_MEDICATION_OPT_2', text: 'Takes medications independently', clinical_score: 1, answer_order: 2});
MATCH (q:Question {id: 'LAWTON_MEDICATION'}), (a_LAWTON_MEDICATION_OPT_2:Answer {id: 'LAWTON_MEDICATION_OPT_2'}) CREATE (q)-[:HAS_OPTION]->(a_LAWTON_MEDICATION_OPT_2);
CREATE (a_LAWTON_FINANCES_OPT_1:Answer {id: 'LAWTON_FINANCES_OPT_1', text: 'Needs help with finances', clinical_score: 0, answer_order: 1});
MATCH (q:Question {id: 'LAWTON_FINANCES'}), (a_LAWTON_FINANCES_OPT_1:Answer {id: 'LAWTON_FINANCES_OPT_1'}) CREATE (q)-[:HAS_OPTION]->(a_LAWTON_FINANCES_OPT_1);
CREATE (a_LAWTON_FINANCES_OPT_2:Answer {id: 'LAWTON_FINANCES_OPT_2', text: 'Manages financial matters independently', clinical_score: 1, answer_order: 2});
MATCH (q:Question {id: 'LAWTON_FINANCES'}), (a_LAWTON_FINANCES_OPT_2:Answer {id: 'LAWTON_FINANCES_OPT_2'}) CREATE (q)-[:HAS_OPTION]->(a_LAWTON_FINANCES_OPT_2);
CREATE (a_BARTHEL_BOWELS_OPT_1:Answer {id: 'BARTHEL_BOWELS_OPT_1', text: 'Incontinent (or needs to be given enemata)', clinical_score: 0, answer_order: 1});
MATCH (q:Question {id: 'BARTHEL_BOWELS'}), (a_BARTHEL_BOWELS_OPT_1:Answer {id: 'BARTHEL_BOWELS_OPT_1'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_BOWELS_OPT_1);
CREATE (a_BARTHEL_BOWELS_OPT_2:Answer {id: 'BARTHEL_BOWELS_OPT_2', text: 'Occasional accident (once/week)', clinical_score: 1, answer_order: 2});
MATCH (q:Question {id: 'BARTHEL_BOWELS'}), (a_BARTHEL_BOWELS_OPT_2:Answer {id: 'BARTHEL_BOWELS_OPT_2'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_BOWELS_OPT_2);
CREATE (a_BARTHEL_BOWELS_OPT_3:Answer {id: 'BARTHEL_BOWELS_OPT_3', text: 'Continent', clinical_score: 2, answer_order: 3});
MATCH (q:Question {id: 'BARTHEL_BOWELS'}), (a_BARTHEL_BOWELS_OPT_3:Answer {id: 'BARTHEL_BOWELS_OPT_3'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_BOWELS_OPT_3);
CREATE (a_BARTHEL_BLADDER_OPT_1:Answer {id: 'BARTHEL_BLADDER_OPT_1', text: 'Incontinent, or catheterized and unable to manage', clinical_score: 0, answer_order: 1});
MATCH (q:Question {id: 'BARTHEL_BLADDER'}), (a_BARTHEL_BLADDER_OPT_1:Answer {id: 'BARTHEL_BLADDER_OPT_1'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_BLADDER_OPT_1);
CREATE (a_BARTHEL_BLADDER_OPT_2:Answer {id: 'BARTHEL_BLADDER_OPT_2', text: 'Occasional accident (max. once per 24 hours)', clinical_score: 1, answer_order: 2});
MATCH (q:Question {id: 'BARTHEL_BLADDER'}), (a_BARTHEL_BLADDER_OPT_2:Answer {id: 'BARTHEL_BLADDER_OPT_2'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_BLADDER_OPT_2);
CREATE (a_BARTHEL_BLADDER_OPT_3:Answer {id: 'BARTHEL_BLADDER_OPT_3', text: 'Continent (for over 7 days)', clinical_score: 2, answer_order: 3});
MATCH (q:Question {id: 'BARTHEL_BLADDER'}), (a_BARTHEL_BLADDER_OPT_3:Answer {id: 'BARTHEL_BLADDER_OPT_3'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_BLADDER_OPT_3);
CREATE (a_BARTHEL_GROOMING_OPT_1:Answer {id: 'BARTHEL_GROOMING_OPT_1', text: 'Needs help with personal care', clinical_score: 0, answer_order: 1});
MATCH (q:Question {id: 'BARTHEL_GROOMING'}), (a_BARTHEL_GROOMING_OPT_1:Answer {id: 'BARTHEL_GROOMING_OPT_1'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_GROOMING_OPT_1);
CREATE (a_BARTHEL_GROOMING_OPT_2:Answer {id: 'BARTHEL_GROOMING_OPT_2', text: 'Independent (face/hair/teeth/shaving, implements provided)', clinical_score: 1, answer_order: 2});
MATCH (q:Question {id: 'BARTHEL_GROOMING'}), (a_BARTHEL_GROOMING_OPT_2:Answer {id: 'BARTHEL_GROOMING_OPT_2'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_GROOMING_OPT_2);
CREATE (a_BARTHEL_TOILET_USE_OPT_1:Answer {id: 'BARTHEL_TOILET_USE_OPT_1', text: 'Dependent', clinical_score: 0, answer_order: 1});
MATCH (q:Question {id: 'BARTHEL_TOILET_USE'}), (a_BARTHEL_TOILET_USE_OPT_1:Answer {id: 'BARTHEL_TOILET_USE_OPT_1'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_TOILET_USE_OPT_1);
CREATE (a_BARTHEL_TOILET_USE_OPT_2:Answer {id: 'BARTHEL_TOILET_USE_OPT_2', text: 'Needs some help, but can do something alone', clinical_score: 1, answer_order: 2});
MATCH (q:Question {id: 'BARTHEL_TOILET_USE'}), (a_BARTHEL_TOILET_USE_OPT_2:Answer {id: 'BARTHEL_TOILET_USE_OPT_2'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_TOILET_USE_OPT_2);
CREATE (a_BARTHEL_TOILET_USE_OPT_3:Answer {id: 'BARTHEL_TOILET_USE_OPT_3', text: 'Independent (on/off, dressing, wiping)', clinical_score: 2, answer_order: 3});
MATCH (q:Question {id: 'BARTHEL_TOILET_USE'}), (a_BARTHEL_TOILET_USE_OPT_3:Answer {id: 'BARTHEL_TOILET_USE_OPT_3'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_TOILET_USE_OPT_3);
CREATE (a_BARTHEL_FEEDING_OPT_1:Answer {id: 'BARTHEL_FEEDING_OPT_1', text: 'Unable', clinical_score: 0, answer_order: 1});
MATCH (q:Question {id: 'BARTHEL_FEEDING'}), (a_BARTHEL_FEEDING_OPT_1:Answer {id: 'BARTHEL_FEEDING_OPT_1'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_FEEDING_OPT_1);
CREATE (a_BARTHEL_FEEDING_OPT_2:Answer {id: 'BARTHEL_FEEDING_OPT_2', text: 'Needs help cutting, spreading butter, etc.', clinical_score: 1, answer_order: 2});
MATCH (q:Question {id: 'BARTHEL_FEEDING'}), (a_BARTHEL_FEEDING_OPT_2:Answer {id: 'BARTHEL_FEEDING_OPT_2'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_FEEDING_OPT_2);
CREATE (a_BARTHEL_FEEDING_OPT_3:Answer {id: 'BARTHEL_FEEDING_OPT_3', text: 'Independent (food provided within reach)', clinical_score: 2, answer_order: 3});
MATCH (q:Question {id: 'BARTHEL_FEEDING'}), (a_BARTHEL_FEEDING_OPT_3:Answer {id: 'BARTHEL_FEEDING_OPT_3'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_FEEDING_OPT_3);
CREATE (a_BARTHEL_TRANSFERS_OPT_1:Answer {id: 'BARTHEL_TRANSFERS_OPT_1', text: 'Unable – no sitting balance', clinical_score: 0, answer_order: 1});
MATCH (q:Question {id: 'BARTHEL_TRANSFERS'}), (a_BARTHEL_TRANSFERS_OPT_1:Answer {id: 'BARTHEL_TRANSFERS_OPT_1'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_TRANSFERS_OPT_1);
CREATE (a_BARTHEL_TRANSFERS_OPT_2:Answer {id: 'BARTHEL_TRANSFERS_OPT_2', text: 'Major help (one or two people, physical), can sit', clinical_score: 1, answer_order: 2});
MATCH (q:Question {id: 'BARTHEL_TRANSFERS'}), (a_BARTHEL_TRANSFERS_OPT_2:Answer {id: 'BARTHEL_TRANSFERS_OPT_2'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_TRANSFERS_OPT_2);
CREATE (a_BARTHEL_TRANSFERS_OPT_3:Answer {id: 'BARTHEL_TRANSFERS_OPT_3', text: 'Minor help (verbal or physical)', clinical_score: 2, answer_order: 3});
MATCH (q:Question {id: 'BARTHEL_TRANSFERS'}), (a_BARTHEL_TRANSFERS_OPT_3:Answer {id: 'BARTHEL_TRANSFERS_OPT_3'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_TRANSFERS_OPT_3);
CREATE (a_BARTHEL_TRANSFERS_OPT_4:Answer {id: 'BARTHEL_TRANSFERS_OPT_4', text: 'Independent', clinical_score: 3, answer_order: 4});
MATCH (q:Question {id: 'BARTHEL_TRANSFERS'}), (a_BARTHEL_TRANSFERS_OPT_4:Answer {id: 'BARTHEL_TRANSFERS_OPT_4'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_TRANSFERS_OPT_4);
CREATE (a_BARTHEL_MOBILITY_OPT_1:Answer {id: 'BARTHEL_MOBILITY_OPT_1', text: 'Immobile', clinical_score: 0, answer_order: 1});
MATCH (q:Question {id: 'BARTHEL_MOBILITY'}), (a_BARTHEL_MOBILITY_OPT_1:Answer {id: 'BARTHEL_MOBILITY_OPT_1'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_MOBILITY_OPT_1);
CREATE (a_BARTHEL_MOBILITY_OPT_2:Answer {id: 'BARTHEL_MOBILITY_OPT_2', text: 'Wheelchair independent (including corners, etc.)', clinical_score: 1, answer_order: 2});
MATCH (q:Question {id: 'BARTHEL_MOBILITY'}), (a_BARTHEL_MOBILITY_OPT_2:Answer {id: 'BARTHEL_MOBILITY_OPT_2'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_MOBILITY_OPT_2);
CREATE (a_BARTHEL_MOBILITY_OPT_3:Answer {id: 'BARTHEL_MOBILITY_OPT_3', text: 'Walks with help of one person (verbal or physical)', clinical_score: 2, answer_order: 3});
MATCH (q:Question {id: 'BARTHEL_MOBILITY'}), (a_BARTHEL_MOBILITY_OPT_3:Answer {id: 'BARTHEL_MOBILITY_OPT_3'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_MOBILITY_OPT_3);
CREATE (a_BARTHEL_MOBILITY_OPT_4:Answer {id: 'BARTHEL_MOBILITY_OPT_4', text: 'Independent (may use aid, e.g., stick)', clinical_score: 3, answer_order: 4});
MATCH (q:Question {id: 'BARTHEL_MOBILITY'}), (a_BARTHEL_MOBILITY_OPT_4:Answer {id: 'BARTHEL_MOBILITY_OPT_4'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_MOBILITY_OPT_4);
CREATE (a_BARTHEL_DRESSING_OPT_1:Answer {id: 'BARTHEL_DRESSING_OPT_1', text: 'Dependent', clinical_score: 0, answer_order: 1});
MATCH (q:Question {id: 'BARTHEL_DRESSING'}), (a_BARTHEL_DRESSING_OPT_1:Answer {id: 'BARTHEL_DRESSING_OPT_1'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_DRESSING_OPT_1);
CREATE (a_BARTHEL_DRESSING_OPT_2:Answer {id: 'BARTHEL_DRESSING_OPT_2', text: 'Needs help, but can do about half unaided', clinical_score: 1, answer_order: 2});
MATCH (q:Question {id: 'BARTHEL_DRESSING'}), (a_BARTHEL_DRESSING_OPT_2:Answer {id: 'BARTHEL_DRESSING_OPT_2'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_DRESSING_OPT_2);
CREATE (a_BARTHEL_DRESSING_OPT_3:Answer {id: 'BARTHEL_DRESSING_OPT_3', text: 'Independent (including buttons, zips, laces, etc.)', clinical_score: 2, answer_order: 3});
MATCH (q:Question {id: 'BARTHEL_DRESSING'}), (a_BARTHEL_DRESSING_OPT_3:Answer {id: 'BARTHEL_DRESSING_OPT_3'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_DRESSING_OPT_3);
CREATE (a_BARTHEL_STAIRS_OPT_1:Answer {id: 'BARTHEL_STAIRS_OPT_1', text: 'Unable', clinical_score: 0, answer_order: 1});
MATCH (q:Question {id: 'BARTHEL_STAIRS'}), (a_BARTHEL_STAIRS_OPT_1:Answer {id: 'BARTHEL_STAIRS_OPT_1'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_STAIRS_OPT_1);
CREATE (a_BARTHEL_STAIRS_OPT_2:Answer {id: 'BARTHEL_STAIRS_OPT_2', text: 'Needs help (verbal, physical, carrying aid)', clinical_score: 1, answer_order: 2});
MATCH (q:Question {id: 'BARTHEL_STAIRS'}), (a_BARTHEL_STAIRS_OPT_2:Answer {id: 'BARTHEL_STAIRS_OPT_2'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_STAIRS_OPT_2);
CREATE (a_BARTHEL_STAIRS_OPT_3:Answer {id: 'BARTHEL_STAIRS_OPT_3', text: 'Independent up and down', clinical_score: 2, answer_order: 3});
MATCH (q:Question {id: 'BARTHEL_STAIRS'}), (a_BARTHEL_STAIRS_OPT_3:Answer {id: 'BARTHEL_STAIRS_OPT_3'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_STAIRS_OPT_3);
CREATE (a_BARTHEL_BATHING_OPT_1:Answer {id: 'BARTHEL_BATHING_OPT_1', text: 'Dependent', clinical_score: 0, answer_order: 1});
MATCH (q:Question {id: 'BARTHEL_BATHING'}), (a_BARTHEL_BATHING_OPT_1:Answer {id: 'BARTHEL_BATHING_OPT_1'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_BATHING_OPT_1);
CREATE (a_BARTHEL_BATHING_OPT_2:Answer {id: 'BARTHEL_BATHING_OPT_2', text: 'Independent (or in shower)', clinical_score: 1, answer_order: 2});
MATCH (q:Question {id: 'BARTHEL_BATHING'}), (a_BARTHEL_BATHING_OPT_2:Answer {id: 'BARTHEL_BATHING_OPT_2'}) CREATE (q)-[:HAS_OPTION]->(a_BARTHEL_BATHING_OPT_2);

// === Create Sequential Question Flow (IADL then ADL) ===
MATCH (q1:Question {id: 'LAWTON_TELEPHONE'}), (q2:Question {id: 'LAWTON_SHOPPING'}) CREATE (q1)-[:NEXT_QUESTION]->(q2);
MATCH (q1:Question {id: 'LAWTON_SHOPPING'}), (q2:Question {id: 'LAWTON_FOOD_PREP'}) CREATE (q1)-[:NEXT_QUESTION]->(q2);
MATCH (q1:Question {id: 'LAWTON_FOOD_PREP'}), (q2:Question {id: 'LAWTON_HOUSEKEEPING'}) CREATE (q1)-[:NEXT_QUESTION]->(q2);
MATCH (q1:Question {id: 'LAWTON_HOUSEKEEPING'}), (q2:Question {id: 'LAWTON_LAUNDRY'}) CREATE (q1)-[:NEXT_QUESTION]->(q2);
MATCH (q1:Question {id: 'LAWTON_LAUNDRY'}), (q2:Question {id: 'LAWTON_TRANSPORTATION'}) CREATE (q1)-[:NEXT_QUESTION]->(q2);
MATCH (q1:Question {id: 'LAWTON_TRANSPORTATION'}), (q2:Question {id: 'LAWTON_MEDICATION'}) CREATE (q1)-[:NEXT_QUESTION]->(q2);
MATCH (q1:Question {id: 'LAWTON_MEDICATION'}), (q2:Question {id: 'LAWTON_FINANCES'}) CREATE (q1)-[:NEXT_QUESTION]->(q2);
MATCH (q1:Question {id: 'LAWTON_FINANCES'}), (q2:Question {id: 'BARTHEL_BOWELS'}) CREATE (q1)-[:NEXT_QUESTION]->(q2);
MATCH (q1:Question {id: 'BARTHEL_BOWELS'}), (q2:Question {id: 'BARTHEL_BLADDER'}) CREATE (q1)-[:NEXT_QUESTION]->(q2);
MATCH (q1:Question {id: 'BARTHEL_BLADDER'}), (q2:Question {id: 'BARTHEL_GROOMING'}) CREATE (q1)-[:NEXT_QUESTION]->(q2);
MATCH (q1:Question {id: 'BARTHEL_GROOMING'}), (q2:Question {id: 'BARTHEL_TOILET_USE'}) CREATE (q1)-[:NEXT_QUESTION]->(q2);
MATCH (q1:Question {id: 'BARTHEL_TOILET_USE'}), (q2:Question {id: 'BARTHEL_FEEDING'}) CREATE (q1)-[:NEXT_QUESTION]->(q2);
MATCH (q1:Question {id: 'BARTHEL_FEEDING'}), (q2:Question {id: 'BARTHEL_TRANSFERS'}) CREATE (q1)-[:NEXT_QUESTION]->(q2);
MATCH (q1:Question {id: 'BARTHEL_TRANSFERS'}), (q2:Question {id: 'BARTHEL_MOBILITY'}) CREATE (q1)-[:NEXT_QUESTION]->(q2);
MATCH (q1:Question {id: 'BARTHEL_MOBILITY'}), (q2:Question {id: 'BARTHEL_DRESSING'}) CREATE (q1)-[:NEXT_QUESTION]->(q2);
MATCH (q1:Question {id: 'BARTHEL_DRESSING'}), (q2:Question {id: 'BARTHEL_STAIRS'}) CREATE (q1)-[:NEXT_QUESTION]->(q2);
MATCH (q1:Question {id: 'BARTHEL_STAIRS'}), (q2:Question {id: 'BARTHEL_BATHING'}) CREATE (q1)-[:NEXT_QUESTION]->(q2);

// === Assessment Start/End Nodes and Flow ===
CREATE (start:AssessmentFlow {id: 'start', type: 'introduction', message: "Let's begin your daily living abilities assessment. Please answer the following questions."});
CREATE (end:AssessmentFlow {id: 'completion', type: 'completion', message: "Thank you for completing the assessment."});
MATCH (start:AssessmentFlow {id: 'start'}), (first:Question {id: 'LAWTON_TELEPHONE'}) CREATE (start)-[:LEADS_TO]->(first);
MATCH (last:Question {id: 'BARTHEL_BATHING'}), (end:AssessmentFlow {id: 'completion'}) CREATE (last)-[:LEADS_TO]->(end);